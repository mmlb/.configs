---
# Configuration for Alacritty, the GPU enhanced terminal emulator

scrolling:
  history: 100000

# Display tabs using this many cells (changes require restart)
tabspaces: 8

# Font configuration (changes require restart)
#
# Important font attributes like antialiasing, subpixel aa, and hinting can be
# controlled through fontconfig. Specifically, the following attributes should
# have an effect:
#
# * hintstyle
# * antialias
# * lcdfilter
# * rgba
#
# For instance, if you wish to disable subpixel antialiasing, you might set the
# rgba property to "none". If you wish to completely disable antialiasing, you
# can set antialias to false.
#
# Please see these resources for more information on how to use fontconfig
#
# * https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
# * file:///usr/share/doc/fontconfig/fontconfig-user.html
font:
  # The normal (roman) font face to use.
  normal:
    #family: monospace # should be "Menlo" or something on macOS.
    #family: Go Mono
    family: Hack
    # Style can be specified to pick a specific face.
    # style: Regular

  # The bold font face
  bold:
    #family: monospace # should be "Menlo" or something on macOS.
    #family: Go Mono
    family: Hack
    # Style can be specified to pick a specific face.
    # style: Bold

  # The italic font face
  italic:
    #family: monospace # should be "Menlo" or something on macOS.
    #family: Go Mono
    family: Hack
    # Style can be specified to pick a specific face.
    # style: Italic

  # Point size of the font
  size: 14.0

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Colors (Srcery)
colors:
  # Default colors
  primary:
    background: '0x1C1B19'
    foreground: '0xFCE8C3'

  # Normal colors
  normal:
    black:   '0x1C1B19'
    red:     '0xEF2F27'
    green:   '0x519F50'
    yellow:  '0xFBB829'
    blue:    '0x2C78BF'
    magenta: '0xE02C6D'
    cyan:    '0x0AAEB3'
    white:   '0x918175'

  # Bright colors
  bright:
    black:   '0x2D2B28'
    red:     '0xF75341'
    green:   '0x98BC37'
    yellow:  '0xFED06E'
    blue:    '0x529CE0'
    magenta: '0xFF5C8F'
    cyan:    '0x53FDE9'
    white:   '0xFCE8C3'

## Colors (Tomorrow Night Bright)
#colors:
#  # Default colors
#  primary:
#    background: '0x000000'
#    foreground: '0xeaeaea'
#
#  # Colors the cursor will use if `custom_cursor_colors` is true
#  cursor:
#    text: '0x000000'
#    cursor: '0xffffff'
#
#  # Normal colors
#  normal:
#    black:   '0x000000'
#    red:     '0xd54e53'
#    green:   '0xb9ca4a'
#    yellow:  '0xe6c547'
#    blue:    '0x7aa6da'
#    magenta: '0xc397d8'
#    cyan:    '0x70c0ba'
#    white:   '0x424242'
#
#  # Bright colors
#  bright:
#    black:   '0x666666'
#    red:     '0xff3334'
#    green:   '0x9ec400'
#    yellow:  '0xe7c547'
#    blue:    '0x7aa6da'
#    magenta: '0xb77ee0'
#    cyan:    '0x54ced6'
#    white:   '0x2a2a2a'
#
#  # Dim colors (Optional)
#  dim:
#    black:   '0x333333'
#    red:     '0xf2777a'
#    green:   '0x99cc99'
#    yellow:  '0xffcc66'
#    blue:    '0x6699cc'
#    magenta: '0xcc99cc'
#    cyan:    '0x66cccc'
#    white:   '0xdddddd'

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"
  save_to_clipboard: true

# Live config reload (changes require restart)
live_config_reload: true

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  url:
    launcher: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F12
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `None` action.
key_bindings:
  - { key: V,        mods: Control|Shift,    action: Paste               }
  - { key: C,        mods: Control|Shift,    action: Copy                }
  - { key: Q,        mods: Control|Shift,    action: Quit                }
  - { key: W,        mods: Control|Shift,    action: Quit                }
  - { key: Insert,   mods: Shift,            action: PasteSelection      }
  - { key: Key0,     mods: Control,          action: ResetFontSize       }
  - { key: Equals,   mods: Control,          action: IncreaseFontSize    }
  - { key: Add,      mods: Control,          action: IncreaseFontSize    }
  - { key: Subtract, mods: Control,          action: DecreaseFontSize    }
  - { key: Minus,    mods: Control,          action: DecreaseFontSize    }
  - { key: Paste,                            action: Paste                            }
  - { key: Copy,                             action: Copy                             }
  - { key: L,        mods: Control,          action: ClearLogNotice                   }
  - { key: L,        mods: Control,          chars: "\x0c"                            }
  - { key: Home,     mods: Alt,              chars: "\x1b[1;3H"                       }
  - { key: Home,                             chars: "\x1bOH",        mode: AppCursor  }
  - { key: Home,                             chars: "\x1b[H",        mode: ~AppCursor }
  - { key: End,      mods: Alt,              chars: "\x1b[1;3F"                       }
  - { key: End,                              chars: "\x1bOF",        mode: AppCursor  }
  - { key: End,                              chars: "\x1b[F",        mode: ~AppCursor }
  - { key: PageUp,   mods: Shift,            action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageUp,   mods: Shift,            chars: "\x1b[5;2~",     mode: Alt        }
  - { key: PageUp,   mods: Control,          chars: "\x1b[5;5~"                       }
  - { key: PageUp,   mods: Alt,              chars: "\x1b[5;3~"                       }
  - { key: PageUp,                           chars: "\x1b[5~"                         }
  - { key: PageDown, mods: Shift,            action: ScrollPageDown, mode: ~Alt       }
  - { key: PageDown, mods: Shift,            chars: "\x1b[6;2~",     mode: Alt        }
  - { key: PageDown, mods: Control,          chars: "\x1b[6;5~"                       }
  - { key: PageDown, mods: Alt,              chars: "\x1b[6;3~"                       }
  - { key: PageDown,                         chars: "\x1b[6~"                         }
  - { key: Tab,      mods: Shift,            chars: "\x1b[Z"                          }
  - { key: Back,                             chars: "\x7f"                            }
  - { key: Back,     mods: Alt,              chars: "\x1b\x7f"                        }
  - { key: Insert,                           chars: "\x1b[2~"                         }
  - { key: Delete,                           chars: "\x1b[3~"                         }
  - { key: Left,     mods: Shift,            chars: "\x1b[1;2D"                       }
  - { key: Left,     mods: Control,          chars: "\x1b[1;5D"                       }
  - { key: Left,     mods: Alt,              chars: "\x1b[1;3D"                       }
  - { key: Left,                             chars: "\x1b[D",        mode: ~AppCursor }
  - { key: Left,                             chars: "\x1bOD",        mode: AppCursor  }
  - { key: Right,    mods: Shift,            chars: "\x1b[1;2C"                       }
  - { key: Right,    mods: Control,          chars: "\x1b[1;5C"                       }
  - { key: Right,    mods: Alt,              chars: "\x1b[1;3C"                       }
  - { key: Right,                            chars: "\x1b[C",        mode: ~AppCursor }
  - { key: Right,                            chars: "\x1bOC",        mode: AppCursor  }
  - { key: Up,       mods: Shift,            chars: "\x1b[1;2A"                       }
  - { key: Up,       mods: Control,          chars: "\x1b[1;5A"                       }
  - { key: Up,       mods: Alt,              chars: "\x1b[1;3A"                       }
  - { key: Up,                               chars: "\x1b[A",        mode: ~AppCursor }
  - { key: Up,                               chars: "\x1bOA",        mode: AppCursor  }
  - { key: Down,     mods: Shift,            chars: "\x1b[1;2B"                       }
  - { key: Down,     mods: Control,          chars: "\x1b[1;5B"                       }
  - { key: Down,     mods: Alt,              chars: "\x1b[1;3B"                       }
  - { key: Down,                             chars: "\x1b[B",        mode: ~AppCursor }
  - { key: Down,                             chars: "\x1bOB",        mode: AppCursor  }
  - { key: F1,                               chars: "\x1bOP"                          }
  - { key: F2,                               chars: "\x1bOQ"                          }
  - { key: F3,                               chars: "\x1bOR"                          }
  - { key: F4,                               chars: "\x1bOS"                          }
  - { key: F5,                               chars: "\x1b[15~"                        }
  - { key: F6,                               chars: "\x1b[17~"                        }
  - { key: F7,                               chars: "\x1b[18~"                        }
  - { key: F8,                               chars: "\x1b[19~"                        }
  - { key: F9,                               chars: "\x1b[20~"                        }
  - { key: F10,                              chars: "\x1b[21~"                        }
  - { key: F11,                              chars: "\x1b[23~"                        }
  - { key: F12,                              chars: "\x1b[24~"                        }
  - { key: F1,       mods: Shift,            chars: "\x1b[1;2P"                       }
  - { key: F2,       mods: Shift,            chars: "\x1b[1;2Q"                       }
  - { key: F3,       mods: Shift,            chars: "\x1b[1;2R"                       }
  - { key: F4,       mods: Shift,            chars: "\x1b[1;2S"                       }
  - { key: F5,       mods: Shift,            chars: "\x1b[15;2~"                      }
  - { key: F6,       mods: Shift,            chars: "\x1b[17;2~"                      }
  - { key: F7,       mods: Shift,            chars: "\x1b[18;2~"                      }
  - { key: F8,       mods: Shift,            chars: "\x1b[19;2~"                      }
  - { key: F9,       mods: Shift,            chars: "\x1b[20;2~"                      }
  - { key: F10,      mods: Shift,            chars: "\x1b[21;2~"                      }
  - { key: F11,      mods: Shift,            chars: "\x1b[23;2~"                      }
  - { key: F12,      mods: Shift,            chars: "\x1b[24;2~"                      }
  - { key: F1,       mods: Control,          chars: "\x1b[1;5P"                       }
  - { key: F2,       mods: Control,          chars: "\x1b[1;5Q"                       }
  - { key: F3,       mods: Control,          chars: "\x1b[1;5R"                       }
  - { key: F4,       mods: Control,          chars: "\x1b[1;5S"                       }
  - { key: F5,       mods: Control,          chars: "\x1b[15;5~"                      }
  - { key: F6,       mods: Control,          chars: "\x1b[17;5~"                      }
  - { key: F7,       mods: Control,          chars: "\x1b[18;5~"                      }
  - { key: F8,       mods: Control,          chars: "\x1b[19;5~"                      }
  - { key: F9,       mods: Control,          chars: "\x1b[20;5~"                      }
  - { key: F10,      mods: Control,          chars: "\x1b[21;5~"                      }
  - { key: F11,      mods: Control,          chars: "\x1b[23;5~"                      }
  - { key: F12,      mods: Control,          chars: "\x1b[24;5~"                      }
  - { key: F1,       mods: Alt,              chars: "\x1b[1;6P"                       }
  - { key: F2,       mods: Alt,              chars: "\x1b[1;6Q"                       }
  - { key: F3,       mods: Alt,              chars: "\x1b[1;6R"                       }
  - { key: F4,       mods: Alt,              chars: "\x1b[1;6S"                       }
  - { key: F5,       mods: Alt,              chars: "\x1b[15;6~"                      }
  - { key: F6,       mods: Alt,              chars: "\x1b[17;6~"                      }
  - { key: F7,       mods: Alt,              chars: "\x1b[18;6~"                      }
  - { key: F8,       mods: Alt,              chars: "\x1b[19;6~"                      }
  - { key: F9,       mods: Alt,              chars: "\x1b[20;6~"                      }
  - { key: F10,      mods: Alt,              chars: "\x1b[21;6~"                      }
  - { key: F11,      mods: Alt,              chars: "\x1b[23;6~"                      }
  - { key: F12,      mods: Alt,              chars: "\x1b[24;6~"                      }
  - { key: F1,       mods: Super,            chars: "\x1b[1;3P"                       }
  - { key: F2,       mods: Super,            chars: "\x1b[1;3Q"                       }
  - { key: F3,       mods: Super,            chars: "\x1b[1;3R"                       }
  - { key: F4,       mods: Super,            chars: "\x1b[1;3S"                       }
  - { key: F5,       mods: Super,            chars: "\x1b[15;3~"                      }
  - { key: F6,       mods: Super,            chars: "\x1b[17;3~"                      }
  - { key: F7,       mods: Super,            chars: "\x1b[18;3~"                      }
  - { key: F8,       mods: Super,            chars: "\x1b[19;3~"                      }
  - { key: F9,       mods: Super,            chars: "\x1b[20;3~"                      }
  - { key: F10,      mods: Super,            chars: "\x1b[21;3~"                      }
  - { key: F11,      mods: Super,            chars: "\x1b[23;3~"                      }
  - { key: F12,      mods: Super,            chars: "\x1b[24;3~"                      }
  - { key: NumpadEnter,                      chars: "\n"                              }
